


jwt.secret=7nd9ZcSrjsGla55Q9WiNO5gR5HX9qxu77nd9ZcSrjsGla55Q9WiNO5gR5HX9qxu7

server.port=6083

spring.application.name=SMSGateway
spring.eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Route Definitions:
# AccessService
spring.cloud.gateway.routes[0].id=login-service
spring.cloud.gateway.routes[0].uri=lb://LoginService
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/loginService/v1/**
spring.cloud.gateway.routes[0].filters[0]=AuthenticationFilter

# UploadDownloadService
spring.cloud.gateway.routes[1].id=file-service
spring.cloud.gateway.routes[1].uri=lb://UploadingDownloadingService
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/UploadingDownloadingService/v1/**
spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter

# OperationalService
spring.cloud.gateway.routes[2].id=OperationalServices
spring.cloud.gateway.routes[2].uri=lb://OperationalServices
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/operationalService/v1/**
spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter

## SuperAdmin
#spring.cloud.gateway.routes[1].id=SuperAdminService
#spring.cloud.gateway.routes[1].uri=lb://SuperAdminService
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/superAdminService/v1/**
#spring.cloud.gateway.routes[1].filters[0]=AuthenticationFilter


# AsnService
spring.cloud.gateway.routes[3].id=AsnServices
spring.cloud.gateway.routes[3].uri=lb://AsnServices
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/asnService/v1/**
spring.cloud.gateway.routes[3].filters[0]=AuthenticationFilter

# AsnService
spring.cloud.gateway.routes[4].id=ProductionPlanService
spring.cloud.gateway.routes[4].uri=lb://ProductionPlanService
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/ProductionPlanService/v1/**
spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter

#gateReceiptService
spring.cloud.gateway.routes[5].id=GateReceiptService
spring.cloud.gateway.routes[5].uri=lb://GateReceiptService
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/gateReceiptService/v1/**
spring.cloud.gateway.routes[5].filters[0]=AuthenticationFilter

#StoreServices
spring.cloud.gateway.routes[6].id=StoreServices
spring.cloud.gateway.routes[6].uri=lb://StoreServices
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/storeService/v1/**
spring.cloud.gateway.routes[6].filters[0]=AuthenticationFilter

#DockServices
spring.cloud.gateway.routes[7].id=DockService
spring.cloud.gateway.routes[7].uri=lb://DockService
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/DockService/v1/**
spring.cloud.gateway.routes[7].filters[0]=AuthenticationFilter

# QualityControl
spring.cloud.gateway.routes[8].id=QualityControl
spring.cloud.gateway.routes[8].uri=lb://QualityControl
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/QualityControl/v1/**
spring.cloud.gateway.routes[8].filters[0]=AuthenticationFilter

# PrintingService
spring.cloud.gateway.routes[9].id=printingservice
spring.cloud.gateway.routes[9].uri=lb://printingservice
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/printingservice/v1/**
spring.cloud.gateway.routes[9].filters[0]=AuthenticationFilter

#spring.cloud.gateway.routes[0].id=SMSGateway
#spring.cloud.gateway.routes[0].uri=lb://SMSGateway
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/**
#spring.cloud.gateway.routes[0].filters[0]=AuthenticationFilter

jwt.expirationDateInMin=1440
jwt.refreshExpirationDateInMin=1540



spring.main.web-application-type= reactive
spring.main.allow-bean-definition-overriding=true

# Enable CORS globally for all endpoints
spring.web.cors.allow-origins=*
spring.web.cors.allow-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allow-headers=*
spring.web.cors.allow-credentials=true

#spring.cloud.gateway.routes[2].id=jwt-validation-route
#spring.cloud.gateway.routes[2].uri=lb://SuperAdminGateway
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/SMSGateway/**
#spring.cloud.gateway.routes[2].filters[0]=AuthenticationFilter


# Set root log level
logging.level.root=INFO

# Set specific package log level
logging.level.org.springframework=INFO
logging.level.com.example=INFO
